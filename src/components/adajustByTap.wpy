<style lang="less">
@import '../common/common.less';
.adajustTable{
  margin-top:40rpx;
}
.unordered,.ordered{
  background: @bgc-card;
  .statement{
    height:60rpx;
    border-bottom: 5rpx solid @btn-em;
    .title{
      height:40rpx;
      font-size: 30rpx;
    }
    .tip{
      height:30rpx;
      font-size:24rpx;
    }
  }
  .content{
    margin-left:40rpx;
    display: flex;
    flex-wrap: wrap;
    .name{
      font-size: 30rpx;
      background:orange; 
      height:160rpx;
      width:40rpx;
      margin:20rpx;
      text-align: center;
    }
  }
}
.result{
  font-size: 24rpx;
  color: #666;
  display: inline-block;
  margin:5rpx 8rpx;
  height:30rpx;
}
.roundCount{
  display: flex;
  margin:10px;
  input{
    text-align: center;
  }
}
.submit{
  width:450rpx;
  margin: 40rpx auto;
  padding:0;
  background:cadetblue;
  letter-spacing: 20rpx;
}
</style>
<template>
  <view class="adajustTable">
    <view class="unordered">
      <view class = "statement">
        <view class = "title">尚未确定实力的人员</view>
        <view class = "tip">按照实力由强到弱的顺序，依次长按，即可实现排序</view>
      </view>
      <view class = "content"  @touchend="itemMove">
        <repeat for="{{personList_unordered}}" key="item" class="li">
          <view class="name" data-tag="unordered" data-index="{{index}}">{{item}}</view> 
        </repeat>
      </view>
    </view>
    <view class="ordered">
      <view class = "statement">
        <view class = "title">已经确定的实力人员</view>
        <view class = "tip">长按人名，即可将人员移出实力排行榜</view>
      </view>
      <view class = "content" @touchend="itemMove">
        <repeat for="{{personList_ordered}}" key="item" class="li">
          <view class="name" data-tag="ordered" data-index="{{index}}">{{item}}</view> 
        </repeat>
      </view>
    </view>
    <view class = "result">
      <view class="">共{{personList.length}}参赛，实力由强到弱依次为</view>
      <repeat for="{{personList}}" key="item"  class="tip">
        <view class="tip">{{index+1}}.{{item}}</view>
      </repeat>
    </view>    
    <view class="roundCount">
      <label for="count">请输入每人需要完成的场次：要求人数与场次的乘积可以被4整除</label>
      <input id="count"  @tap="inputRandCount" value="{{roundCount}}" />
    </view>
    <button @tap="submit" class="submit">确定</button>
  </view>
</template>

<script>
import wepy from 'wepy'
import {setStorage, getPersonListFromStorage} from '../../common/util'
import 'wepy-async-function'
export default class AdajustByTap extends wepy.component {
  data = {
    personList: [],
    personList_unordered: [],
    personList_ordered: [],
    randCount: 0
  }
  async onLoad() {
    this.personList = await getPersonListFromStorage()
    this.personList_unordered = this.personList.slice()
    this.personList_ordered = []
    console.log(this.personList, this.personList_unordered, this.personList_ordered)
  }
  methods = {
    inputRandCount(e) {
      this.roundCount = parseInt(e.detail.value)
    },
    itemMove (e) {
      if (!e.target.dataset.tag) { return };
      let index = e.target.dataset.index
      let orderedList = this.data.personList_ordered
      let unorderedList = this.data.personList_unordered
      let list = orderedList.concat(unorderedList)
      let value = null
      if (e.target.dataset.tag === 'unordered') {
        value = unorderedList[index]
        unorderedList.splice(index, 1)
        orderedList.push(value)
      }
      if (e.target.dataset.tag === 'ordered') {
        value = orderedList[index]
        orderedList.splice(index, 1)
        unorderedList.push(value)
      }
      this.personList_unordered = unorderedList
      this.personList_ordered = orderedList
      this.personList = orderedList.concat(unorderedList)

      setStorage('personList', list)
      setStorage('personList_ordered', orderedList)
      setStorage('personList_unordered', unorderedList)
    },
    submit () {
      // 先判断名字中有没有 为 空的
      let personList = this.data.personList.filter((name) => {
        return name
      })
      // 人数小于4 不能成立
      if (personList.length < 4) {
        wx.showModal({
          title: '错误提示',
          content: '人数不能少于4人'
        })
        return
      }
      setStorage('personList', personList)
      // 由于后端顺序 是由弱到强排列的 所以 下对拿到的数组转序
      let reversePersonList = []
      for (let i = personList.length - 1; i < 0; i--) {
        reversePersonList.push(personList[i])
      }
      let reversePersonListToString = reversePersonList.join('+')
      // 导航到 比赛现场
      wepy.switchTab({
        url: '../main/main?personListToString=' + reversePersonListToString + '&randCount=' + this.randCount
      })
    }
  }
}
</script>
 
