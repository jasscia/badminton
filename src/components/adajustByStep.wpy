<style lang="less" scoped>
@import '../common/common.less';
.panel{
  margin-top:40rpx;
  font-size: 40rpx;
}
.tip{
  font-size: 40rpx;
  color:tomato;
  line-height: 80rpx;
  padding:20rpx;
  }
.personList{
  .row{
    display: flex;
    background: @bgc-card;
    margin:30rpx 0;
    height:100rpx;
    line-height: 100rpx;
    vertical-align: middle;
    border-radius: 20rpx;
    padding:0 0 0 20rpx;
    .order::before{
      content: 'NO.';
      font-size: 60%;
      font-style: italic;
    }
    .order{
      width:80rpx;
    }
    .name{
      width:200rpx;
      white-space:nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      margin-left:15rpx;
    }
    .name,.order{
      text-align: center
    }
    .iconGroup{
      flex: 1;
      display:flex;
      justify-content: flex-end;
      // width:500rpx;
      margin:0;
      padding:0;
    }
    .icon{
      width:80rpx;
      height:80rpx;
      margin:10rpx 15rpx;
      text-align: center;
      border-radius: 50%;
      font-weight: 900;
      background: @btn-em;  
    }
    .icon.null{
      background:@bgc-card;
    }
    .icon.remove{
      background: tomato;
    }
    .icon.add{
      background:springgreen;
    }
    .icon::after{
      font-family:"iconfont";
      font-weight:900;
      display: inline-block;
      transform: translateY(-8rpx);
    }
    .remove::after{
      content: "\e648";
    }
    .add::after{
      content:"\e613";
    }
    .up::after{
      content: "\e62c"
    }
    .down::after{
      content:"\e630"
    }
    input{
      flex:1;
      width:600rpx;
      height:80rpx;
      line-height: 80rpx;
      vertical-align: middle;
      text-align: center;
      font-size: 30rpx;
    }
    .sureAdd{
      background: lawngreen;
      font-size: 30rpx;
    }
    .sureAdd::after{
      content: "\e638";
      matgin-bottom:20rpx;
      display: inline-block;
    }
  }
}
.submit{
  width:450rpx;
  margin: 40rpx auto;
  padding:0;
  background: @btn;
  letter-spacing: 20rpx;  
}
</style>
<template>
  <view class="panel">
    <view class="tip"  wx:if="{{!personList.length}}">ops！ 您还没有输入报名人员呢，请返回报名表，输入报名人员后再来吧</view>
    <view class="personList" @tap="sortPersonList"  wx:if="{{personList.length>0}}">
      <repeat for="{{personList}}" key="item">
        <view class="row" wx:if="{{item}}">
          <view class="order">{{index+1}}</view>
          <view class="name">{{item}}</view>
          <view class="iconGroup upAndDown">
            <view class="icon remove" data-type="remove" data-order="{{index+1}}"></view>
            <view class="icon up" data-type="up"  data-order="{{index+1}}"  wx:if="{{index+1>1}}"></view>
            <view  wx:else class="icon null"></view>
            <view class="icon down" data-type="down" data-order="{{index+1}}"  wx:if="{{index+1<personList.length}}"></view>
            <view  wx:else class="icon null"></view>
            <view class="icon add" data-type="add" data-order="{{index+1}}"></view>
          </view>
          <!-- <view class="iconGroup  addAndReduce"> -->
            <!-- <view class="icon add" data-type="add" data-order="{{index+1}}"></view> -->
            <!-- <view class="icon remove" data-type="remove" data-order="{{index+1}}"></view> -->
          <!-- </view>          -->
        </view>
        <view class="row addRow" wx:if="{{!item}}">
            <input placeholder="输入姓名,点击右侧确定添加" value="{{newName}}" @input="inputNewName"/>
            <view class="icon sureAdd" @tap="addPlayer"></view>
        </view>
      </repeat>
    </view>
</view>  
</template>

<script>
import wepy from 'wepy'
import 'wepy-async-function'
export default class AdajustByStep extends wepy.component {
  props = {
    personList: {
      type: Array,
      default: [],
      twoWay: true
    },
    activeBar: {
      type: String,
      default: '输入报名人员',
      twoWay: true
    }
  }
  data={
    newName:'',
    addAfter: null
  }
  methods = {
    sortPersonList(e) {
      let dom = e.target
      let domData = dom.dataset
      if (domData.type) {
        let order = domData.order
        let type = domData.type
        let originArr = this.personList
        let currArr = this.changePosition(originArr, order - 1, type)
        this.personList = currArr
        this.personListToString = currArr.join(' ')
      }
    },
  inputNewName(e){
    this.newName=e.detail.value
  },
  addPlayer(e) {
    let index=this.addAfter;
    if (this.newName) {
      this.personList[index]= this.newName
    }else{
      this.personList.splice(index,1)
    }
    this.addAfter = 0
    this.newName=''
  }
  }
  changePosition(array, index, way) {
    if (way === 'up') {
      let tem = array[index]
      array[index] = array[index - 1]
      array[index - 1] = tem
    }
    if (way === 'down') {
      let tem = array[index]
      array[index] = array[index + 1]
      array[index + 1] = tem
    }
    if (way === 'remove') {
      array.splice(index, 1)
    }
    if (way === 'add') {
      this.ifshowAdd = true
      this.addAfter = index
      this.personList.splice(index,0,null)
    }
    return array
  }
}
</script>
 
