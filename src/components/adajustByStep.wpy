<style lang="less" scoped>
@import '../common/common.less';
// .panel{
//   margin-top:40rpx;
// }
.statement,.names{
  line-height: 40rpx;
  font-size: 30rpx;
  background:@bgc-card;
  margin:2rpx;
}
.names{
  display: flex;
  flex-wrap: wrap; 
  .name{
    color: @font-side;
    margin:10rpx;
    text-align: center;
    vertical-align: middle;
  }
}
.ul{
  font-size: 40rpx;
  .li{
    display: flex;
    background: @bgc-card;
    margin:30rpx 0;
    height:100rpx;
    line-height: 100rpx;
    vertical-align: middle;
    border-radius: 20rpx;
    // position: relative;
    padding:0 20rpx;
    .order::before{
      content: 'NO.';
      font-size: 60%;
      font-style: italic;
    }
    .name{
      flex:1;
      white-space:nowrap;
      overflow: hidden;
      }
    .name,.order{
      text-align: center
    }
    .icon{
      width: 80rpx;
      margin:10rpx 25rpx;
      text-align: center;
      /* color:#ccc; */
      border-radius: 50%;
      font-weight: 900;
    }
    .up,.down{
      background: @btn-em;     
    }
    // .up:after,.down:after{ 
    //   font-size: 120%;
    //   display: inline-block;
    //   transform: translateY(-5rpx);
    //   color: @btn-em;
    // }
    .null{
      background:@bgc-card;
    // }
    // .up::after{
    //   content: '↑';
    // }
    // .down::after{
    //   content: '↓';
    // }
  }
}
.submit{
  width:450rpx;
  margin: 40rpx auto;
  padding:0;
  background: @btn;
  letter-spacing: 20rpx;  
}
.addPlayer{
  position: fixed;
  bottom:0;
  left:0%;
  right:0;
  height:80rpx;
  text-align: center;
  font-size:40rpx;
}
</style>
<template>
  <view class="panel" wx:if="{{personList.length>0}}">
    <!-- <view class="statement">共{{personList.length}}人参赛，实力由强到弱依次为</view> -->
    <!-- <view  class="names">      
      <repeat for="{{personList}}" key="item"  class="tip">
          <view class="name">{{index+1}}.{{item}}</view>
      </repeat>
    </view> -->
    <view class="warp" @tap="sortPersonList">
      <view class="tip"  hidden="{{activeBar==='输入报名人员'}}">人员实力由强向弱依次为</view>
      <repeat for="{{personList}}" key="item">
        <view class="row">
          <view class="order">{{index+1}}</view>
          <view class="name">{{item}}</view>
          <view class="upAndDown"  hidden="{{activeBar==='输入报名人员'}}">
            <view class="icon up" data-type="up"  data-order="{{index+1}}"  wx:if="{{index+1>1}}">&#xe62c;</view>
            <view  wx:else class="icon null"></view>
            <view class="icon down" data-type="down" data-order="{{index+1}}"  wx:if="{{index+1<personList.length}}">&#xe62d;</view>
            <view  wx:else class="icon null"></view>
          </view>
          <view class="addAndReduce" hidden="{{activeBar!=='输入报名人员'}}">
            <view class="icon add" data-type="add" data-order="{{index+1}}">&#xe6f8;</view>
            <view class="icon remove" data-type="remove" data-order="{{index+1}}">&#xe60c;</view>
          </view>         
        </view>
      </repeat>
    </view>
    <input class="addPlayer" 
          placeholder="请输入拟添加人员姓名" 
          @change="addPlayer" data-add-after="{{addAfter}}" 
          hidden="{{!ifShowAdd}}"/>
</view>  
</template>

<script>
import wepy from 'wepy'
import 'wepy-async-function'
export default class AdajustByStep extends wepy.component {
  props = {
    personList: {
      type: Array,
      default: [],
      twoWay: true
    },
    activeBar: {
      type: String,
      default: '输入报名人员',
      twoWay: true
    }
  }
  data={
    ifShowAdd: false,
    addAfter: 0
  }
  methods = {
    sortPersonList(e) {
      let dom = e.target
      let domData = dom.dataset
      if (domData.type) {
        let order = domData.order
        let type = domData.type
        let originArr = this.personList
        let currArr = this.changePosition(originArr, order - 1, type)

        this.dotAnimate(e, type)
        this.personList = currArr
        this.personListToString = currArr.join(' ')
      }
    }
  }
  changePosition(array, index, way) {
    if (way === 'up') {
      let tem = array[index]
      array[index] = array[index - 1]
      array[index - 1] = tem
    }
    if (way === 'down') {
      let tem = array[index]
      array[index] = array[index + 1]
      array[index + 1] = tem
    }
    if (way === 'remove') {
      array.splice(index, 1)
    }
    if (way === 'add') {
      this.ifshowAdd = true
      this.addAfter = index
    }
    return array
  }
  addPlayer(e) {
    let value = e.detail.value
    let addAfter = e.target.dataset.addAfter
    if (value) {
      this.personList.splice(addAfter, 0, value)
    }
    this.ifshowAdd = false
    this.addAfter = 0
  }
}
</script>
 
