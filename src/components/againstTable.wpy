<style lang="less">
@import '../common/common.less';
 .againstTable{
  width:100%;
  box-sizing: border-box;
  padding-left:20rpx;
  padding-right:20rpx;
}
.againstItem{
  font-size:36rpx;
  height:200rpx;
  background-color: #fff;
  display: flex;
  align-items: center;
  margin:40rpx 0;
  border-radius: 20rpx;
  position: relative;
}
.side,
.handleBtnGroup,
.score,
.sub{
  display: inline-block;
  text-align: center;
  box-sizing: border-box;
  padding:0;
}
/* 总宽 750rpx
padding:20px 0;
其余的 分别宽 160 70 70 110 */
.side{
  width:160rpx;
  }
.handleBtnGroup{
  width:70rpx;
  }
.score{
  width: 70rpx;
}
.sub{
  width:110rpx;
}
.side .name{
  width:100%;
  margin: 10px 0;
  text-align: center;
  white-space:nowrap;
  overflow: hidden;
}
.handleBtnGroup button{
  width:100%;
  height:60rpx;
  line-height: 60rpx;
  margin:10rpx 0;
  text-align: center;
  display: inline-block;
}
.score{
  height:160rpx;
  text-align: center; 
  line-height: 160rpx;
  font-size:60rpx; 
  background:cadetblue; 
}
.scoreL{
  border-bottom-left-radius: 50%;
  border-top-left-radius: 50%;
}
.scoreR{
  border-bottom-right-radius: 50%;
  border-top-right-radius: 50%;
}
.sub{
  font-size: 25rpx;
  letter-spacing: -2rpx;
  text-align: center;
}
.sub .finishBtn{
  margin:5rpx;
  background: gold;
  border-radius: 20%;
} 
.done::before{
  content: '结束';
  position: absolute;
  left:0;
  right:415rpx;
  bottom:0;
  top:0;
}
.done::after{
  content: '结束';
  position: absolute;
  left:415rpx;
  right:0;
  bottom:0;
  top:0;
}
.done::before,.done::after{
  background: @btn-em;
  text-align: center;
  line-height: 95px;
  vertical-align: middle;
  z-index: 999;
  border-radius: 20rpx;
}
.selected{
  background:lightgreen;
  transform:scaleY(1.3);
  transition: transform 0.5s;
}
</style>
<template>
  <view class="againstItem {{item[6]}} {{activedItem===index?'selected':''}}" @tap.capture='selectItem' data-id="{{index}}">
      <view class="side">
        <view class="name">{{item[0]}}</view>
        <view class="name">{{item[1]}}</view>
      </view>
      <!-- <view class="score"> -->
      <view class="handleBtnGroup">
        <button @tap='scoreChange' data-id="{{index}}" data-side="A" data-way="more"  hover-class="hover">+</button>
        <button @tap='scoreChange' data-id="{{index}}" data-side="A" data-way="less"  hover-class="hover">-</button>
      </view>
      <view class="score scoreL">{{item[4]}}</view>
      <view class="sub" @tap="finish" data-id="{{index}}">
        <view>第{{index+1}}场</view>
        <view if="{{item[6]==='undone'}}"  class="finishBtn">结束比赛</view> 
        <view else  class="finishBtn">查看比赛</view>
      </view>
      <view class="score scoreR">{{item[5]}}</view>
      <view class="handleBtnGroup">
        <button @tap='scoreChange' data-id="{{index}}" data-side="B" data-way="more" hover-class="hover">+</button>
        <button @tap='scoreChange' data-id="{{index}}" data-side="B" data-way="less"  hover-class="hover">-</button>
      </view>
      <!-- </view> -->
      <view class="side">
        <view class="name">{{item[2]}}</view>
        <view class="name">{{item[3]}}</view>
      </view>
    </view>
</template>

<script>
  import wepy from 'wepy'
  import {setStorage, requestTableList} from '../common/util'
  import 'wepy-async-function'
  export default class AgainstTable extends wepy.component {
    data= {
      personList: [],
      scoreList: [],
      personCount: 0,
      roundCount: 4,
      activedItem: ''
    }

    onLoad (options) {
      this.personCount = this.personList.length
    }

    onShareAppMessage() {
      return {}
    }

    watch={
      scoreList() {
        setStorage('scoreList', this.scoreList)
      },
      personList() {
        setStorage('personList', this.personList)
      }
    }
    methods = {
      createAgainstTableTap() {
        if (!this.data.roundCount || this.data.personCount * this.data.roundCount % 4) {
          wepy.showModal({
            title: '错误提示',
            content: '场次和人数的乘积 不能被4整除 排阵失败！！',
            mask: true,
            duration: 2000
          })
        }
      },
      getAgainstTable: async function() {
        let res = await requestTableList()
        let againstTable = Array.prototype.numToString.call(res.data.AgainstTable, this.personList)
        for (let i = 0, len = againstTable.length; i < len; i++) {
          againstTable[i] = againstTable[i].concat([0, 0, 'undone'])
        };
        this.scoreList = againstTable,
        wx.showModal({
          title: '友情建议',
          content: `共为您排了${res.data.AgainstTable.length}场比赛，如果您的赛时为2小时，建议预定${Math.ceil(res.data.AgainstTable.length / 14)}个场地!\rps:每个场地不宜超过14场。`
        })
      },
      scoreChange(e) {
        let id = e.target.dataset.id
        let side = (e.target.dataset.side === 'A' ? 4 : 5)
        let way = e.target.dataset.way
        let newScoreList = this.data.scoreList
        if (way === 'more') {
          newScoreList[id][side]++
        } else if (newScoreList[id][side] !== 0) {
          newScoreList[id][side]--
        }
        this.scoreList = newScoreList
      },
      selectItem(e) {
        this.activedItem = e.currentTarget.dataset.id
      },
      finish(e) {
        let index = e.currentTarget.dataset.id
        let scoreList = this.data.scoreList
        scoreList[index][6] = (scoreList[index][6] === 'done' ? 'undone' : 'done')
        this.scoreList = scoreList
      }
    }
  }
</script>
