<style lang="less">
@import '../common/common.less';
.singup{
  margin:40rpx;
}
.textarea{
  background: @bgc-card;
  padding:20rpx;
  letter-spacing:2px;
  text-align:left;
  height:200rpx;
  line-height: 50rpx;
  font-weight: lighter;
  color:#333;
  font-weight: 200;
}
.textarea::before{
  content:'请输入参与人员姓名，用 + 或 空格 分隔';
  letter-spacing: 0;
  color:#666;
  display: block;
  margin-top:-40rpx;
  font-weight: lighter;
  font-size:28rpx;
  text-align: center;
}
.statement{
  font-size: 28rpx;
  color: #000;
  line-height: 40rpx;
  margin:40rpx auto;
}
.tip{
  font-size: 24rpx;
  color: #666;
  display: inline-block;
  margin:5rpx 8rpx;
  height:30rpx;
}
.nextBtn{
  width:450rpx;
  margin: 40rpx auto;
  padding:0;
  background:cadetblue;
  letter-spacing: 20rpx;  
}
</style>
<template>
  <view class="singup">{{activeBar}} {{titleList[1]}} {{titleList[0]}}
     <textarea placeholder='' @input="inputNames" class="textarea" value="{{personListToString}}"> </textarea>
      <repeat for="{{personList}}" key="item"  class="tip">
        <view class="tip">{{index+1}}.{{item}}
      </repeat>
    <view class="statement">说明：为了程序生成更合理的对阵表，请输入人名后，移步step2,适当调整人员的实力。</view>
    <button @tap="nextBtnTap" class="nextBtn" hidden="{{personList.length<4}}">下一步</button>
  </view>
</template>

<script>
import wepy from 'wepy'
import {setStorage, getPersonListFromStorage} from '../common/util.js'
import 'wepy-async-function'
export default class SingUp extends wepy.component {
  data={
    personList: [],
    personListToString: null
  }
  onLoad() {
    this.personList = getPersonListFromStorage()
    this.personListToString = this.personList.join(' ')
  }
  methods = {

    inputNames: function(e) {
      let content = e.detail.value
      let names = this.parseNames(content.trim())
      this.personList = names
      this.personListToString = names.join(' ')

      setStorage('personList', this.personList)
      setStorage('personListToString', this.personListToString)
    },
    nextBtnTap: function() {
      this.$emit('nextStep')
    }
  }
  parseNames = function (names) {
    return names.split(/[!！？？]+/).slice(-1)[0].split(/[\+\＋\s]+/)
  }
}
</script>
